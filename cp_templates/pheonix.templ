

                                     // ‡•ê


#include <bits/stdc++.h>

using namespace std;

/* DEBUGGER */
#ifndef ONLINE_JUDGE
#include "debugger.h"
#else
#define debug(x...)
#define debugArr(arr, n)
#endif

/* TYPES */
#define ff first
#define ss second
#define ll long long 
#define ldb long double
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi vector<int>
#define V vector
#define vll vector<long long>
#define mii map<int, int>
#define si set<int>

/* PB-DS */

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//
//using namespace __gnu_pbds;
//template <typename T>
//using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

/* FUNCTIONS */
#define f(i,s,e) for(ll  i=s;i<e;i++)
#define rf(i,e,s) for(ll  i=e-1;i>=s;i--)
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define pb push_back
#define eb emplace_back

/* UTILS */
#define MOD 1000000007
#define PI 3.1415926535897932384626433832795
inline ll fact(int n) { ll result = 1; for (int i = 1; i <= n; ++i) result = ((result)*(i)); return result; }
// inline ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }
inline bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }
inline void yes() { cout<<"YES\n"; }
inline void no() { cout<<"NO\n"; }
inline int numberWithLastSetBit(ll n){return (n&(~(n-1)));}
inline ll min(ll a,ll b) { if (a<b) return a; return b; }
inline ll max(ll a,ll b) { if (a>b) return a; return b; }
#define int long long

// ------------------------------------------------------------------------------------------------------------------------

void solve(){

}

// ------------------------------------------------------------------------------------------------------------------------

signed main(){

  #ifndef ONLINE_JUDGE
    freopen("ipf.in","r",stdin); 
    freopen("opf.in","w",stdout);
    freopen("error.txt", "w", stderr);
  #endif

  ios_base::sync_with_stdio(false); 
  cin.tie(NULL);
  
  int t = 1;
  cin>>t; 
  while(t--){
    cerr<<t<<" --- "<<endl;
    solve();
  }

  return 0; 
}
