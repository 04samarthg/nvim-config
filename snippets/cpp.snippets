snippet phoenix
		

                                         // ‡•ê


    #include <bits/stdc++.h>
    #include <ext/pb_ds/assoc_container.hpp>
    #include <ext/pb_ds/tree_policy.hpp>

    using namespace std;
    using namespace __gnu_pbds;

    /* DEBUGGER */
    #ifndef ONLINE_JUDGE
    #include "debugger.h"
    #else
    #define debug(x...)
    #define debugArr(arr, n)
    #endif

    /* TYPES */
    #define ff first
    #define ss second
    #define ll long long 
    #define ull unsigned long long 
    #define ldb long double
    #define pii pair<int, int>
    #define pll pair<long long, long long>
    #define vi vector<int>
    #define vll vector<long long>
    #define vc vector<char>
    #define mii map<int, int>
    #define umii unordered_map<int,int>
    #define si set<int>
    #define sc set<char>
    #define usi unordered_set<int> 

    /* PB-DS */
    template <typename T>
    using oset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;

    /* FUNCTIONS */
    #define rep(i, begin, end) for(__typeof(end) i = (begin)-((begin)>(end)); i != (end)-((begin)>(end)); i += 1-2*((begin)>(end)))
    #define f(i,s,e) for(ll  i=s;i<e;i++)
    #define cf(i,s,e) for(ll  i=s;i<=e;i++)
    #define rf(i,e,s) for(ll  i=e-1;i>=s;i--)
    #define all(v) v.begin(),v.end()
    #define rall(v) v.rbegin(),v.rend()
    #define pb push_back
    #define eb emplace_back



    /* UTILS */
    #define MOD 1000000007
    #define PI 3.1415926535897932384626433832795
    #define read(type) readInt<type>()
    inline ll min(ll a,int b) { if (a<b) return a; return b; }
    inline ll min(int a,ll b) { if (a<b) return a; return b; }
    inline ll max(ll a,int b) { if (a>b) return a; return b; }
    inline ll max(int a,ll b) { if (a>b) return a; return b; }
    inline ll fact(int n) { ll result = 1; for (int i = 1; i <= n; ++i) result = ((result)*(i)); return result; }
    // inline ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }
    // inline ll lcm(ll a,ll b) { return (a*b)/(__gcd(a,b)); }
    inline string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }
    inline string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }
    inline bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }
    inline void yes() { cout<<"YES\n"; }
    inline void no() { cout<<"NO\n"; }
    inline int numberWithLastSetBit(ll n){return (n&(~(n-1)));}
    #define int long long

    // ------------------------------------------------------------------------------------------------------------------------

    void solve(){


    }   

    // ------------------------------------------------------------------------------------------------------------------------

    signed main(){

    #ifndef ONLINE_JUDGE
        freopen("ipf.in","r",stdin); 
        freopen("opf.in","w",stdout);
        freopen("error.txt", "w", stderr);
    #endif

    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);

    int t = 1;
    // cin>>t; 
    while(t--){
        cerr<<t<<" --- "<<endl;
        solve();
    }

    return 0; 
    }

